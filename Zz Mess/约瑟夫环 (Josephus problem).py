# -*- coding: utf-8 -*-
# @Author: Puffrora
# @Date:   2020-08-12 17:20:25
# @Last Modified by:   Puffrora
# @Last Modified time: 2020-08-12 17:34:26


# 1
# =======================
# 一般解法 环链表


# 2
# =======================
# 递归解法
# 设 josephus(n, m) 为 n 个人且指定报号数为 m 时最后剩下的人编号
# 在这一轮有 n 个人
# 1  2  3  ...  m-1  m  m+1  m+2  ...  n
# m 被删除后剩下 n-1 个人:
# ... ...  n-2	n-1  x   1    2   ...  ...
# 旧一轮的编号 = (新一轮编号 + m - 1) % n + 1
# 至于为什么不是 旧一轮的编号 = (新一轮编号 + m) % n 是因为报号从 1 开始
# 如果 (新一轮编号 + m) == n 则会出现 0

# 因为最后一轮一个人编号肯定为1 可根据关系找到他倒数第二轮的编号 直到找到第一轮的编号

def josephus(n, m):
	return 1 if n == 1 else (josephus(n-1, m) + m - 1) % n + 1

